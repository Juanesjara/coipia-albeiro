{"version":3,"file":"index.js","sourceRoot":"src/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { config } from 'dotenv'\r\nimport path from 'path'\r\nconst discord = require('discord.js');\r\n//import  { ShardingManager,} from 'discord.js'\r\nconfig({ path: path.resolve(__dirname, '../.env') })\r\n\r\nconst manager = new discord.ShardingManager(\r\n    path.resolve(__dirname, 'bot.js'),\r\n    { token: process.env.DISCORD_TOKEN }\r\n)\r\nmanager.on('shardCreate', (shard: { id: any; }) => console.log(`Launched shard ${shard.id}`))\r\nmanager.spawn()\r\n\r\n//js que agregue del nuevo bot de musica\r\n\r\nconst fs = require('fs');\r\n\r\n\r\nconst client = new discord.Client({ disableMentions: 'everyone' }) ;\r\n\r\nimport { Player } from 'discord-player'\r\n\r\nclient.player = new Player(client);\r\nclient.config = require('./config/bot');\r\nclient.emotes = client.config.emojis;\r\nclient.filters = client.config.filters;\r\nclient.commands = new discord.Collection();\r\n\r\nclient.on('message', (message: { content: string; channel: { send: (arg0: string) => void; }; })=>{\r\n    const args = message.content.trim().split(/ +/);\r\n    const command = args.shift().toLowerCase();\r\n    \r\n    if(command === '13'){\r\n        message.channel.send(`mientras mas me la mama mas me crece`);\r\n    }\r\n});\r\n\r\nclient.on('voiceStateUpdate', (oldState: any, newState: any) => {\r\n\r\n    //console.log(\"oldsate\",oldState.channel)\r\n    // console.log(\"oldsate\",oldState.guild)\r\n    \r\n    //console.log(\"new channel\",newState.channels)\r\n    //console.log(\"new\",newState.guild)\r\n    \r\n    var channel = oldState.guild.me.voice.channelID;\r\n    var channelx = newState.channel;\r\n    console.log(\"channel oldstate\", channel)\r\n    console.log(\"soy oldstate.id\",oldState.id)\r\n    console.log(\"soy newstate.channel\", newState.channel?.id)\r\n    //console.log(\"channel new state\", channelx)\r\n\r\n    // if nobody left the channel in question, return.\r\n    if (oldState.id !==  oldState.guild.me.voice.channelID || newState.channel?.id){\r\n        console.log(\"pase por el return\")\r\n        return;\r\n    }\r\n  \r\n    // otherwise, check how many people are in the channel now\r\n    if (!oldState.channel.members.size as any - 1) {\r\n        setTimeout(() => { // if 1 (you), wait five minutes\r\n            if (!oldState.channel.members.size as any - 1) // if there's still 1 member, \r\n            oldState.channel.leave(); // leave\r\n        }, 300000); // (5 min in ms)\r\n    }\r\n  })\r\n\r\nfs.readdirSync('./comandos').forEach((dirs: any) => {\r\n    const commands = fs.readdirSync(`./comandos/${dirs}`).filter((files: string) => files.endsWith('.js'));\r\n\r\n    for (const file of commands) {\r\n        const command = require(`./comandos/${dirs}/${file}`);\r\n        //console.log(`Loading command ${file}`);\r\n        client.commands.set(command.name.toLowerCase(), command);\r\n    };\r\n});\r\n\r\nconst events = fs.readdirSync('./events').filter((file: string) => file.endsWith('.js'));\r\nconst player = fs.readdirSync('./player').filter((file: string) => file.endsWith('.js'));\r\n\r\nfor (const file of events) {\r\n    //console.log(`Loading discord.js event ${file}`);\r\n    const event = require(`./events/${file}`);\r\n    client.on(file.split(\".\")[0], event.bind(null, client));\r\n};\r\n\r\nfor (const file of player) {\r\n   // console.log(`Loading discord-player event ${file}`);\r\n    const event = require(`./player/${file}`);\r\n    client.player.on(file.split(\".\")[0], event.bind(null, client));\r\n};\r\n\r\nclient.login(client.config.discord.token);\r\n"]}