{"version":3,"file":"music-quiz.js","sourceRoot":"src/","sources":["music-quiz.ts"],"names":[],"mappings":"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","sourcesContent":["import { MessageCollector, VoiceChannel, TextChannel, Guild, DMChannel } from 'discord.js';\r\nimport ytdl from 'ytdl-core-discord'\r\nimport { QuizArgs } from './types/quiz-args'\r\nimport { CommandoMessage } from 'discord.js-commando'\r\nimport Spotify from './spotify'\r\nimport Youtube from 'scrape-youtube'\r\nimport { Song } from 'song'\r\nimport { VoiceConnection } from 'discord.js'\r\nimport internal from 'stream'\r\nimport { StreamDispatcher } from 'discord.js';\r\nimport { NewsChannel } from 'discord.js';\r\n\r\nconst stopCommand = '=stop'\r\nconst skipCommand = '=skip'\r\n\r\nexport class MusicQuiz {\r\n    guild: Guild\r\n    textChannel: TextChannel | DMChannel | NewsChannel\r\n    voiceChannel: VoiceChannel\r\n    messageCollector: MessageCollector\r\n    arguments: QuizArgs\r\n    songs: Song[]\r\n    currentSong: number = 0\r\n    skippers: string[] = []\r\n    connection: VoiceConnection\r\n    scores: {[key: string]: number}\r\n    artistGuessed: boolean\r\n    titleGuessed: boolean\r\n    musicStream: internal.Readable\r\n    voiceStream: StreamDispatcher\r\n    songTimeout: NodeJS.Timeout\r\n    reactPermissionNotified: boolean = false\r\n\r\n    constructor(message: CommandoMessage, args: QuizArgs) {\r\n        this.guild = message.guild\r\n        this.textChannel = message.channel\r\n        this.voiceChannel = message.member.voice.channel\r\n        this.arguments = args\r\n    }\r\n\r\n    async start() {\r\n        this.songs = await this.getSongs(\r\n            this.arguments.playlist,\r\n            parseInt(this.arguments.songs, 10)\r\n        )\r\n\r\n        if (!this.songs || this.songs.length === 0) {\r\n            if (this.songs && this.songs.length === 0) {\r\n                await this.textChannel.send('Esta playlist no contiene Canciones')\r\n            }\r\n\r\n            this.finish()\r\n\r\n            return\r\n        }\r\n\r\n        try {\r\n            this.connection = await this.voiceChannel.join()\r\n        } catch (e) {\r\n            await this.textChannel.send('No me pude unir a tu canal, verifica que no este lleno')\r\n            await this.finish()\r\n\r\n            return\r\n        }\r\n\r\n        this.currentSong = 0\r\n        this.scores = {}\r\n        this.textChannel.send(`\r\n            **Let's get started**! :headphones: :tada:\r\n            **${this.songs.length}** Canciones han sido escogidas aleatoriamente  de la playlist\r\n            tienes un minuto para adivinarlas.\r\n\r\n            ${this.pointText()}\r\n\r\n            Escribe \\`${stopCommand}\\` para detener el quiz\r\n            Escribe \\`${skipCommand}\\` para pasar a la siguiente cancion\r\n\r\n            - Jara es un Dios\r\n        `.replace(/  +/g, ''))\r\n        this.startPlaying()\r\n\r\n        this.messageCollector = this.textChannel\r\n            .createMessageCollector((message: CommandoMessage) => !message.author.bot)\r\n            .on('collect', message => this.handleMessage(message))\r\n    }\r\n\r\n    async startPlaying() {\r\n        this.titleGuessed = false\r\n        this.artistGuessed = false\r\n        if (this.arguments.only.toLowerCase() === 'artist') {\r\n            this.titleGuessed = true\r\n        } else if (this.arguments.only.toLowerCase() === 'title') {\r\n            this.artistGuessed = true\r\n        }\r\n\r\n        const song = this.songs[this.currentSong]\r\n        const link = await this.findSong(song)\r\n        if (!link) {\r\n            this.nextSong('No pude encontrar esta canción en youtube, voy a pasar a la siguiente')\r\n\r\n            return\r\n        }\r\n\r\n        try {\r\n            this.musicStream = await ytdl(link)\r\n        } catch (e) {\r\n            console.error(e, \"hola\");\r\n            console.error(link, \"soy el link\")\r\n            this.nextSong('No pude reproducir esta canción en youtube, voy a pasar a la siguiente')\r\n            return\r\n        }\r\n\r\n        this.songTimeout = setTimeout(() => {\r\n            this.nextSong('no adivinaron la cancion :/')\r\n        }, 1000 * 60);\r\n\r\n        try {\r\n            this.voiceStream = this.connection.play(this.musicStream, { type: 'opus', volume: .5 })\r\n\r\n            this.voiceStream.on('error', () => {\r\n                    this.textChannel.send('Jm pana me toste, Hasta mañana 🥵')\r\n\r\n                    this.finish()\r\n                })\r\n            this.voiceStream.on('finish', () => this.finish())\r\n            this.voiceStream\r\n        } catch (e) {\r\n            console.error(e);\r\n\r\n            this.textChannel.send('Jm pana me toste, Hasta mañana 🥵')\r\n\r\n            this.finish()\r\n        }\r\n    }\r\n\r\n    async handleMessage(message: CommandoMessage) {\r\n        const content = message.content.toLowerCase()\r\n        if (content === stopCommand) {\r\n            await this.printStatus('Quiz stopped!')\r\n            await this.finish()\r\n\r\n            return\r\n        }\r\n\r\n        if (content === skipCommand) {\r\n            await this.handleSkip(message.author.id)\r\n\r\n            return\r\n        }\r\n\r\n        const song = this.songs[this.currentSong]\r\n        let score = this.scores[message.author.id] || 0\r\n        let correct = false\r\n\r\n        if (!this.titleGuessed && content.includes(song.title.toLowerCase())) {\r\n            score = score + 2\r\n            this.titleGuessed = true\r\n            correct = true\r\n            await this.reactToMessage(message, '😈')\r\n            await this.reactToMessage(message, '✅')\r\n            message.channel.send(`Listo el Pollo`);\r\n        }\r\n\r\n        if (!this.artistGuessed && content.includes(song.artist.toLowerCase())) {\r\n            score = score + 3\r\n            this.artistGuessed = true\r\n            correct = true\r\n            await this.reactToMessage(message, '😈')\r\n            await this.reactToMessage(message, '✅')\r\n            message.channel.send(`Listo el Pollo`);\r\n            \r\n        }\r\n        this.scores[message.author.id] = score\r\n\r\n        if (this.titleGuessed && this.artistGuessed) {\r\n            this.nextSong('Listo el Pollo');\r\n        }\r\n\r\n        if (!correct) {\r\n            await this.reactToMessage(message, `😡`)\r\n            message.channel.send(`Oigan pues`);\r\n            \r\n        }\r\n    }\r\n\r\n    handleSkip(userID: string) {\r\n        if (this.skippers.includes(userID)) {\r\n            return\r\n        }\r\n\r\n        this.skippers.push(userID)\r\n\r\n        const members = this.voiceChannel.members\r\n            .filter(member => !member.user.bot)\r\n        if (this.skippers.length === members.size) {\r\n            this.nextSong('Song skipped!')\r\n\r\n            return\r\n        }\r\n\r\n        this.textChannel.send(`**(${this.skippers.length}/${members.size})** to skip the song`)\r\n    }\r\n\r\n    async finish() {\r\n        if (this.songTimeout) clearTimeout(this.songTimeout)\r\n        if (this.messageCollector) this.messageCollector.stop()\r\n        if (this.voiceStream) this.voiceStream.destroy()\r\n        if (this.musicStream) this.musicStream.destroy()\r\n\r\n        if (this.guild.quiz) this.guild.quiz = null\r\n        this.voiceChannel.leave()\r\n    }\r\n\r\n    nextSong(status: string) {\r\n        if (this.songTimeout) clearTimeout(this.songTimeout)\r\n        this.printStatus(status)\r\n\r\n        if (this.currentSong + 1 === this.songs.length) {\r\n            return this.finish()\r\n        }\r\n\r\n        this.currentSong++\r\n        this.skippers = []\r\n        if (this.musicStream) this.musicStream.destroy()\r\n        if (this.voiceStream) this.voiceStream.destroy()\r\n        this.startPlaying()\r\n    }\r\n\r\n    async printStatus(message: string) {\r\n        const song = this.songs[this.currentSong]\r\n        await this.textChannel.send(`\r\n            **(${this.currentSong + 1}/${this.songs.length})** ${message}\r\n            > **${song.title}** by **${song.artist}**\r\n            > Link: || ${song.link} ||\r\n\r\n            **__SCORES__**\r\n            ${this.getScores()}\r\n        `.replace(/  +/g, ''))\r\n    }\r\n\r\n    getScores(): string {\r\n        return this.voiceChannel.members\r\n            .filter(member => !member.user.bot)\r\n            .array()\r\n            .sort((first, second) => (this.scores[first.id] || 0) < (this.scores[second.id] || 0) ? 1 : -1)\r\n            .map((member, index) => {\r\n                let position = `**${index + 1}.** `\r\n                if (index === 0) {\r\n                    position = ':first_place:'\r\n                } else if (index === 1) {\r\n                    position = ':second_place:'\r\n                } else if (index === 2) {\r\n                    position = ':third_place:'\r\n                }\r\n\r\n                return `${position} <@!${member.id}> ${this.scores[member.id] || 0} puntos`\r\n            })\r\n            .join('\\n')\r\n    }\r\n\r\n    async reactToMessage(message: CommandoMessage, emoji: string) {\r\n        try {\r\n            await message.react(emoji)\r\n        } catch (e) {\r\n            if (this.reactPermissionNotified) {\r\n                return\r\n            }\r\n\r\n            this.reactPermissionNotified = true\r\n            this.textChannel.send(`\r\n                Te pido el favor de que me dejes reaccionar a mensajes, o\r\n                puedes hacer esto facilmente haciendo click en el enlace e invitandome de nuevo a su servidor\r\n                https://discordapp.com/api/oauth2/authorize?client_id=${process.env.DISCORD_CLIENT_ID}&scope=bot&permissions=3147840\r\n            `.replace(/  +/g, ''))\r\n        }\r\n\r\n    }\r\n\r\n    async getSongs(playlist: string, amount: number): Promise<Song[]> {\r\n        const spotify = new Spotify()\r\n        await spotify.authorize()\r\n        if (playlist.includes('spotify.com/playlist')) {\r\n            playlist = playlist.match(/playlist\\/([^?]+)/)[1] || playlist\r\n        }\r\n\r\n        try {\r\n            return (await spotify.getPlaylist(playlist))\r\n                .sort(() => Math.random() > 0.5 ? 1 : -1)\r\n                .filter((song, index) => index < amount)\r\n                .map(song => ({\r\n                    link: `https://open.spotify.com/track/${song.id}`,\r\n                    previewUrl: song.preview_url,\r\n                    title: this.stripSongName(song.name),\r\n                    artist: (song.artists[0] || {}).name\r\n                }))\r\n        } catch (error) {\r\n\r\n            this.textChannel.send('No pude extraer ninguna cancion de esta playlist, asegurate de que sea publica')\r\n\r\n            return null\r\n        }\r\n    }\r\n\r\n    async findSong(song: Song): Promise<string> {\r\n        try {\r\n            // const result = await ytsr(`${song.title} - ${song.artist}`, { limit: 1 })\r\n            const result = await Youtube.searchOne(`${song.title} - ${song.artist}`)\r\n\r\n            return result?.link ?? null\r\n        } catch (e) {\r\n            await this.textChannel.send(\"youtube nos daño el juego, intenta de nuevo\")\r\n            this.finish()\r\n\r\n            throw e\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Will remove all excess from the song names\r\n     * Examples:\r\n     * death bed (coffee for your head) (feat. beabadoobee) -> death bed\r\n     * Dragostea Din Tei - DJ Ross Radio Remix -> Dragostea Din Tei\r\n     *\r\n     * @param name string\r\n     */\r\n    stripSongName(name: string): string {\r\n        return name.replace(/ \\(.*\\)/g, '')\r\n            .replace(/ - .*$/, '')\r\n    }\r\n\r\n    pointText(): string {\r\n        if (this.arguments.only === 'artist') {\r\n            //return 'Guess the artist of the song by typing in chat. When guessed corretly you are awarded **3 points**.'\r\n            return 'Adivina el artista de la cancion y ganaras **3 puntos**.'\r\n        }\r\n\r\n        if (this.arguments.only === 'title') {\r\n            //return 'Guess the title of the song by typing in chat. When guessed corretly you are awarded **2 points**.'\r\n            return 'Adivina el titulo titulo de la cancion y ganaras **2 puntos**.'\r\n        }\r\n\r\n        /*return `\r\n            Guess the song and artist by typing in chat. Points are awarded as follows:\r\n            > Artist - **3 points**\r\n            > Title - **2 points**\r\n            > Artist + title - **5 points**\r\n        `.replace(/  +/g, '')*/\r\n        return `\r\n            Adivina la cancion y el artista para ganar los siguientes puntos:\r\n            > Artista - **3 puntos**\r\n            > Titulo - **2 puntos**\r\n            > Artista + titulo - **5 puntos**\r\n        `.replace(/  +/g, '')\r\n\r\n    }\r\n}\r\n"]}